class Solution {
public:
    int solve(int root,vector<vector<int>>& graph,string& s,int& ans)
    {
        int l1=0 , l2=0;
        for(int node:graph[root])
        {
            int l3=solve(node,graph,s,ans);
            if(s[node]!=s[root])
            {
                if(l3>l1) l2=l1 , l1=l3;
                else if(l3>l2) l2=l3;
            }
        }
        ans=max(ans,l1+l2+1);
        return l1+1;
    }
    int longestPath(vector<int>& parent, string s) {
        int n=s.length();
        vector<vector<int>>graph(n,vector<int>());
        for(int i=1;i<n;i++) graph[parent[i]].push_back(i);
        int ans=0 , ret=solve(0,graph,s,ans);
        return ans;
    }
};
