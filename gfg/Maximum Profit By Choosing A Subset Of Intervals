class Solution {
  public:
  
  static bool cmp(vector<int> &a,vector<int> &b){
      if(a[0]==b[0]){
          if(a[1]==b[1])return a[2]>b[2];
          return a[1]<b[1];
      }
      return a[0]<b[0];
  }
  
    int maximum_profit(int n, vector<vector<int>> &intervals) {
        // Write your code here.
        sort(intervals.begin(),intervals.end(),cmp);
        int dp[n];
        int ans=0;
        for(int i=0;i<n;i++){
            dp[i]=intervals[i][2];
            for(int j=0;j<i;j++){
                if(intervals[j][1]<=intervals[i][0])dp[i]=max(dp[i],dp[j]+intervals[i][2]);
            }
            ans=max(ans,dp[i]);
        }
        return ans;
    }
};
