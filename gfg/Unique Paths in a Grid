const long mod=1e9+7;
class Solution {
  public:
  
    int solve(int i,int j,vector<vector<int>> &grid,vector<vector<int>> &dp,int n,int m){
        if(i<0 || i>=n || j<0 || j>=m || grid[i][j]==0)return 0;
        if(i==n-1 && j==m-1){
            return 1;
        }
        if(dp[i][j]!=-1)return dp[i][j];
        int down=solve(i+1,j,grid,dp,n,m);
        int right=solve(i,j+1,grid,dp,n,m);
        return dp[i][j]=(down+right)%mod;
    }
  
    int uniquePaths(int n, int m, vector<vector<int>> &grid) {
        // code here
        vector<vector<int>> dp(n,vector<int>(m,-1));
        
        return solve(0,0,grid,dp,n,m);
        
    }
};
