struct Job 
{ 
    int id;	 // Job Id 
    int dead; // Deadline of job 
    int profit; // Profit if job is over before or on deadline 
};
*/

class Solution 
{
    public:
    
    static bool comp(Job a, Job b){
        return a.profit>b.profit;
    }
    
    //Function to find the maximum profit and the number of jobs done.
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        vector<int> slot(101,-1);
        sort(arr,arr+n,comp);
        
        int count=0,ans=0;
        for(int i=0;i<n;i++){
            
            int j=arr[i].dead;
            while(j>=1){
                if(slot[j]==-1){
                slot[j]=j;
                count++;
                ans+=arr[i].profit;
                break;
                }
                j--;
            }
        }
        return {count,ans};
    } 
};
