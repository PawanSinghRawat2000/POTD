// User function Template for C++

class Solution{
public:

    void dfs(int i,int j, vector<vector<int>>&vis,vector<vector<char>> &mat,int n,int m){
        if(i<0 || i>=n || j<0 || j>=m || mat[i][j]=='X')return;
        
        if(!vis[i][j]){
            vis[i][j]=1;
            dfs(i+1,j,vis,mat,n,m);
            dfs(i-1,j,vis,mat,n,m);
            dfs(i,j+1,vis,mat,n,m);
            dfs(i,j-1,vis,mat,n,m);
        }
        return;
        
    }

    vector<vector<char>> fill(int n, int m, vector<vector<char>> mat)
    {
        // code here
        vector<vector<int>>vis(n,vector<int>(m,0));
        //check first and last column
        for(int i=0;i<n;i++){
            if(mat[i][0]=='O')dfs(i,0,vis,mat,n,m);
            
            if(mat[i][m-1]=='O')dfs(i,m-1,vis,mat,n,m);
        }
        
        //check first and last row
        for(int j=0;j<m;j++){
            if(mat[0][j]=='O')dfs(0,j,vis,mat,n,m);
            
            if(mat[n-1][j]=='O')dfs(n-1,j,vis,mat,n,m);
        }
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(mat[i][j]=='O' && !vis[i][j])mat[i][j]='X';
            }
        }
        return mat;
        
    }
};
